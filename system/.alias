# Shortcuts

alias _="sudo"

# watch will work with aliases if it's aliased itself:
alias watch='watch '

# aliases to manage aliases, env, and reload these

alias _bp="$EDITOR ~/.bash_profile"
alias _rbp=". ~/.bash_profile"
alias _zr="$EDITOR ~/.zshrc"
alias _rzr=". ~/.zshrc"
alias _e="$EDITOR $DOTFILES_DIR/system/.env"
alias _re=". $DOTFILES_DIR/system/.env"
alias _a="$EDITOR $DOTFILES_DIR/system/.alias"
alias _ra=". $DOTFILES_DIR/system/.alias"
alias _c="$EDITOR $DOTFILES_DIR/system/.custom"
alias _rc=". $DOTFILES_DIR/system/.custom"

# edit hosts file

alias vih="sudo vi /etc/hosts"

# grep in history

alias hig="cat ~/.zsh_history | grep"

# smart tailing

alias tf="tail -f -n300"
alias tfs="tail -f -n400 /var/log/system.log"

# git stuff

alias g="git"
alias "g?"="git status"
alias "g+"="git add"
alias "g-"="git rm"
alias "g!"="git commit -am"
alias "gf!"="git commit --no-verify -am"
alias "g%"="git sync"
alias gp="git pull"
alias gps="git push"
if $(is-supported "alias -g"); then
    alias -g G="| grep -i"
    alias -g H="| head"
    alias -g T="| tail"
    alias -g L="| less"
fi
is-executable hub && eval "$(hub alias -s)" # alias git=hub

# random stuff
alias vi="vim"
alias rr="rm -rf"
alias json="json -c"

# List declared aliases, functions

alias listaliases="alias | sed 's/=.*//'"
alias listfunctions="declare -f | grep '^[a-z].* ()' | sed 's/{$//'" # show non _prefixed functions

# ls

LS_COLORS=`is-supported "ls --color" --color -G`
LS_TIMESTYLEISO=`is-supported "ls --time-style=long-iso" --time-style=long-iso`
LS_GROUPDIRSFIRST=`is-supported "ls --group-directories-first" --group-directories-first`

alias l="ls -lahA $LS_COLORS $LS_TIMESTYLEISO $LS_GROUPDIRSFIRST"
alias ll="ls -lA $LS_COLORS"
alias lt="ls -lhAtr $LS_COLORS $LS_TIMESTYLEISO $LS_GROUPDIRSFIRST"
alias ld="ls -ld $LS_COLORS */"

unset LS_COLORS LS_TIMESTYLEISO LS_GROUPDIRSFIRST

# cd

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias -- -="cd -"                  # Go to previous dir with -
alias cd.='cd $(readlink -f .)'    # Go to real dir (i.e. if current dir is linked)

# tree

alias tree="tree -A"
alias treed="tree -d"
alias tree1="tree -d -L 1"
alias tree2="tree -d -L 2"

# rsync

alias rsync="rsync -vh"

# npm

alias ni="npm install"
alias nun="npm uninstall"
alias nup="npm update"
alias nr="npm reload"

alias nvm-switched="ln -sf `which node` /usr/local/bin/node; ln -sf `which npm` /usr/local/bin/npm"

# vagrant
alias v="vagrant status"
alias vu="vagrant up"
alias vs="vagrant ssh"
alias vh="vagrant halt"
alias vd="vagrant destroy"

# Network

alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias ipl="ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"

# Request using GET, POST, etc. method

for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
    alias "$method"="lwp-request -m '$method'"
done

# Recursively remove Apple meta files

alias cleanupds="find . -type f -name '*.DS_Store' -ls -exec /bin/rm {} \;"
alias cleanupad="find . -type d -name '.AppleD*' -ls -exec /bin/rm -r {} \;"

# Miscellaneous

alias quit="exit"
alias week="date +%V"
alias speedtest="wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip"

# ------------------------------------
# Docker alias and function
# ------------------------------------

alias d="docker"
alias dc="docker-compose"
alias ds="docker service"

# Get latest container ID
alias dl="docker ps -l -q"

# Get container process
alias dps="docker ps"

# Get process included stop container
alias dpa="docker ps -a"

# Get images
alias di="docker images"

# Get container IP
alias dip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"

# Run deamonized container, e.g., $dkd base /bin/echo hello
alias dkd="docker run -d -P"

# Run interactive container, e.g., $dki base /bin/bash
alias dki="docker run -i -t -P"

# Execute interactive container, e.g., $dex base /bin/bash
alias dex="docker exec -i -t"

# Stop all containers
dstop() { docker stop $(docker ps -a -q); }

# Remove all containers
drm() { docker rm $(docker ps -a -q); }

# Stop and Remove all containers
alias drmf='docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)'

driu() { docker rmi $(docker images | grep "^<none>" | awk "{print $3}") }

# Remove all images
dria() { docker rmi $(docker images -q); }

# Dockerfile build, e.g., dbu tcnksm/test
dbu() { docker build -t=$1 . }

# Show all alias related docker
dalias() { alias | grep 'docker' | sed "s/^\([^=]*\)=\(.*\)/\1 => \2/"| sed "s/['|\']//g" | sort; }

# Bash into running container
dbash() { docker exec -it $(docker ps -aqf "name=$1") bash; }

# kubernetes
# alias k="kubectl"
# alias ksk="k -n kube-system"
# alias ka="k --all-namespaces=true"
# alias kaa="ka get all"
# alias kap="ka get po"
# alias kdel="k delete"
# alias kcv="k config view"
# alias kce="code ~/.kube/config"
# alias kcg="k config view | grep 'current-context:' | sed -n -e 's/^.*current-context: //p'"
# alias kcu="k config use-context"
# alias kp="k proxy &"
# # alias h="helm"
# alias hi="h upgrade --install"
# alias hk="h delete --purge"
# alias kk="killall kubectl"
# alias mkk="killall ngrok; kk; killall fswatch; sudo killall ssh"
# alias mkd="mkk; minikube delete"
